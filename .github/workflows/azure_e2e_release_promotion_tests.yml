name: Azure E2E Release Promotion Tests
'on':
  push:
    branches:
      - aj-1436-e2e-staging
  workflow_dispatch:
    inputs:
      testEnv:
        description: >-
          Environment in which tests should be run. Currently only runs on
          staging
      tenant-id:
        description: 'Azure tenant ID. This is a shared identifier used by all Apps deployed for Azure End-to-End (E2E) tests. By default, it is set to the current Azure tenant ID.'
        required: false
        type: string
        default: 'fad90753-2022-4456-9b0a-c7e5b934e408'
      subscription-id:
        description: 'Azure subscription ID. This is a shared identifier used by all Apps deployed for Azure End-to-End (E2E) tests. By default, it is set to the current Azure subscription ID.'
        required: false
        type: string
        default: 'f557c728-871d-408c-a28b-eb6b2141a087'
      mrg-id:
        description: 'Azure Managed Resource Group name. This is a shared identifier used by all Apps deployed for Azure End-to-End (E2E) tests. By default, it is set to the current Azure MRG name.'
        required: false
        type: string
        default: 'e2e-8n6xqg'
env:
  BEE_NAME: >-
    bm-aj-2023
  TOKEN: '${{ secrets.BROADBOT_TOKEN }}'
  BEE_CREATE_RUN_NAME: >-
    bee-create-${{ github.event.repository.name }}-${{ github.run_id }}-${{
    github.run_attempt }}
  ATTACH_BP_TO_LZ_RUN_NAME: >-
    attach-billing-project-to-landing-zone-${{ github.event.repository.name
    }}-${{ github.run_id }}-${{ github.run_attempt }}
jobs:
  init-github-context:
    runs-on: ubuntu-latest
    outputs:
      branch: '${{ steps.extract-inputs.outputs.branch }}'
      delete-bee: '${{ steps.extract-inputs.outputs.delete-bee }}'
    steps:
      - name: Get inputs or use defaults
        id: extract-inputs
        run: >
          echo "branch=${{ inputs.branch || 'develop' }}" >> "$GITHUB_OUTPUT"

          echo "delete-bee=${{ inputs.delete-bee || false }}" >>
          "$GITHUB_OUTPUT"
  params-gen:
    runs-on: ubuntu-latest
    outputs:
      project-name: '${{ steps.gen.outputs.project_name }}'
      bee-name: '${{ env.BEE_NAME }}'
    steps:
      - uses: actions/checkout@v4
      - name: Generate a random billing project name
        id: gen
        run: |
          project_name=$(echo "tmp-billing-project-$(uuidgen)" | cut -c -30)
          echo "project_name=${project_name}" >> $GITHUB_OUTPUT
  # create-bee-workflow:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     id-token: write
  #   steps:
  #     - name: Echo Leo version
  #       run: >
  #         echo '${{ needs.leo-build-tag-publish-job.outputs.custom-version-json
  #         }}'
  #     - name: dispatch to terra-github-workflows
  #       uses: broadinstitute/workflow-dispatch@v4.0.0
  #       with:
  #         run-name: '${{ env.BEE_CREATE_RUN_NAME }}'
  #         workflow: bee-create
  #         repo: broadinstitute/terra-github-workflows
  #         ref: refs/heads/main
  #         token: '${{ env.TOKEN }}'
  #         inputs: >-
  #           { "run-name": "${{ env.BEE_CREATE_RUN_NAME }}", "bee-name": "${{
  #           env.BEE_NAME }}", "bee-template-name": "rawls-e2e-azure-tests", 
  #           "version-template": "staging" }
  # attach-landing-zone-to-bee-workflow:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - init-github-context
  #     # - create-bee-workflow
  #     - params-gen
  #   steps:
  #     - name: dispatch to terra-github-workflows
  #       uses: broadinstitute/workflow-dispatch@v4.0.0
  #       with:
  #         run-name: '${{ env.ATTACH_BP_TO_LZ_RUN_NAME }}'
  #         workflow: attach-billing-project-to-landing-zone.yaml
  #         repo: broadinstitute/terra-github-workflows
  #         ref: refs/heads/main
  #         token: '${{ env.TOKEN }}'
  #         inputs: >-
  #           { "run-name": "${{ env.ATTACH_BP_TO_LZ_RUN_NAME }}", "bee-name": "${{
  #           env.BEE_NAME }}", "billing-project": "${{needs.params-gen.outputs.project-name }}", 
  #           "tenant-id": "${{ inputs.tenant-id}}",
  #           "subscription-id": "${{ inputs.subscription-id}}", "mrg-id": "${{ inputs.mrg-id}}"}
  create-sam-pet-job:
    permissions:
      contents: read
      id-token: write
    needs:
      # - attach-landing-zone-to-bee-workflow
      - params-gen
    runs-on: ubuntu-latest
    # We need to create the pet before starting the tests, otherwise all 3 will do so at the same time and interfere with each other
    steps:
      - name: Generate OAuth2 2.0 access token for owner
        id: 'obtain_token'
        uses: google-github-actions/auth@v1
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/1038484894585/locations/global/workloadIdentityPools/github-wi-pool/providers/github-wi-provider'
          service_account: 'firecloud-qa@broad-dsde-qa.iam.gserviceaccount.com'
          access_token_scopes: 'profile, email, openid'
          access_token_subject: 'hermione.owner@quality.firecloud.org'
          export_environment_variables: false

      - name: Call Sam to create pet
        run: |
          SAM_URL="https://sam.${{ env.BEE_NAME }}.bee.envs-terra.bio"
          API_URL="${SAM_URL}/api/azure/v1/user/petManagedIdentity"
          AZURE_TOKEN="${{ steps.obtain_token.outputs.access_token }}"
          PAYLOAD='{
            "tenantId": "${{ inputs.tenant-id}}",
            "subscriptionId": "${{ inputs.subscription-id}}",
            "managedResourceGroupName": "${{ inputs.mrg-id}}"
          }'
          # Don't echo the response, just the status code
          RESPONSE=$(curl -s -X POST -H "Content-Type: application/json" -H "Authorization: Bearer $AZURE_TOKEN" -d "$PAYLOAD" "$API_URL")
          # Extract the status code
          STATUS_CODE="${RESPONSE: -3}"   
          echo "Result of creating Sam pet: $STATUS_CODE"
  run-wds-e2e-test-job:
    needs:
      # - attach-landing-zone-to-bee-workflow
      - params-gen
      - create-sam-pet-job
    permissions:
      contents: read
      id-token: write
    uses: >-
      broadinstitute/dsp-reusable-workflows/.github/workflows/run-e2e-tests.yaml@aj-1436-wait-longer
    with:
      billing-project-name: '${{ needs.params-gen.outputs.project-name }}'
      bee-name: '${{ needs.params-gen.outputs.bee-name }}'
      branch: main
  sleep-job:
    # One test needs to run before the others and have time to do one-time tasks
    # Such as creating a k8s cluster DB entry in Leo to prevent race conditions
    needs:
      - run-wds-e2e-test-job
    runs-on: ubuntu-latest
    steps:
      - name: Sleep for 10 seconds
        run: echo "Sleeping..." && sleep 10
  run-cromwell-az-e2e:
    needs:
      - params-gen
      # - attach-landing-zone-to-bee-workflow
      - create-sam-pet-job
      - sleep-job
    permissions:
      contents: read
      id-token: write
    uses: >-
      broadinstitute/dsp-reusable-workflows/.github/workflows/cromwell-az-e2e-test.yaml@aj-1436-wait-longer
    with:
      bee-name: '${{ needs.params-gen.outputs.bee-name }}'
      billing-project-name: '${{ needs.params-gen.outputs.project-name }}'
  run-cbas-azure-e2e-test:
    needs:
      - params-gen
      # - attach-landing-zone-to-bee-workflow
      - create-sam-pet-job
      - sleep-job
    permissions:
      contents: read
      id-token: write
    uses: >-
      broadinstitute/dsp-reusable-workflows/.github/workflows/run_cbas_azure_e2e_tests.yaml@aj-1436-wait-longer
    with:
      bee-name: '${{ needs.params-gen.outputs.bee-name }}'
      billing-project-name: '${{ needs.params-gen.outputs.project-name }}'
  # destroy-bee-workflow:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - run-wds-e2e-test-job
  #     - run-cbas-azure-e2e-test
  #     - run-cromwell-az-e2e
  #     - init-github-context
  #   if: '${{ needs.init-github-context.outputs.delete-bee && always() }}'
  #   steps:
  #     - name: dispatch to terra-github-workflows
  #       uses: broadinstitute/workflow-dispatch@v3
  #       with:
  #         workflow: bee-destroy
  #         repo: broadinstitute/terra-github-workflows
  #         ref: refs/heads/main
  #         wait-for-completion: false
  #         token: '${{ env.TOKEN }}'
  #         inputs: '{ "bee-name": "${{ env.BEE_NAME }}" }'
  report-workflow:
    uses: broadinstitute/sherlock/.github/workflows/client-report-workflow.yaml@main
    if: github.ref == 'refs/heads/main'
    with:
      notify-slack-channels-upon-workflow-completion: '#dsde-qa'
    permissions:
      id-token: write
