# TODO: remove once https://github.com/DataBiosphere/leonardo/pull/1281 is merged
dataproc {
  dataprocDefaultRegion = "us-central1"
  leoGoogleProject = ${application.leoGoogleProject}
  clusterUrlBase = ${proxy.proxyUrlBase}
}

# TODO: remove once https://github.com/DataBiosphere/leonardo/pull/1281 is merged
google {
  leoServiceAccountJsonFile = ${application.leoServiceAccountJsonFile}
  groups = ${groups}
}

# TODO: remove once https://github.com/DataBiosphere/leonardo/pull/1281 is merged
clusterFiles {
  configFolderPath = "/Users/qi/workspace/leonardo/config/"
  jupyterServerCrt = "jupyter-server.crt"
  jupyterServerKey = "jupyter-server.key"
  jupyterRootCaPem = "rootCA.pem"
  jupyterRootCaKey = "rootCA.key"
}

application {
  leoGoogleProject = "broad-dsde-dev"
  leoServiceAccountJsonFile = "/Users/qi/workspace/leonardo/config/leonardo-account.json"
  leoServiceAccountEmail = "leonardo-dev@broad-dsde-dev.iam.gserviceaccount.com"
}

groups {
  subEmail = "google@dev.test.firecloud.org"
  dataprocImageProjectGroupName = "dataproc-image-project-group"
  dataprocImageProjectGroupEmail = ${groups.dataprocImageProjectGroupName}"@dev.test.firecloud.org"
}

pubsub {
  pubsubGoogleProject = broad-dsde-dev
  topicName = leonardo-pubsub
}



mysql {
  profile = "slick.jdbc.MySQLProfile$"
  batchSize = 2000
  db {
    driver = "com.mysql.cj.jdbc.Driver"
    url = "jdbc:mysql://sqlproxy:3306/leonardo?rewriteBatchedStatements=true&nullNamePatternMatchesAll=true"
    user = "leonardo"
    password = "9138257_multi_grain_feed_STILL_hunt"
    connectionTimeout = 5000
    numThreads = 200
  }
}

proxy {
  # Should match the jupyter wildcard cert
  proxyDomain = ".jupyter-dev.firecloud.org"
  proxyUrlBase = "https://leonardo.dsde-dev.broadinstitute.org/proxy/"
  
  # TODO: remove once https://github.com/DataBiosphere/leonardo/pull/1281 is merged
  jupyterDomain = ${proxy.proxyDomain}
}

swagger {
  googleClientId = "806222273987-nqg84hiihmlc6s060tvm6respv1l6utm.apps.googleusercontent.com"
  realm = "broad-dsde-dev"
}

liquibase {
  initWithLiquibase = false
}

sam {
  server = "https://sam.dsde-dev.broadinstitute.org:443"
}

akka {
  loglevel = INFO

  # Increased from the default of 3m to support long-lived websocket connections
  # TODO: Jupyter should be injecting periodic pings to keep websocket connections alive.
  # This doesn't seem to be happening in our case; need to figure out why. More info:
  # https://github.com/jupyter/notebook/issues/1474
  # https://github.com/jupyter/notebook/blob/master/notebook/base/zmqhandlers.py#L104
  http {
    server.idle-timeout = 60 seconds
    client.idle-timeout = 60 seconds
    client.connecting-timeout = 60 seconds
    server.request-timeout = 60 seconds
    parsing.max-content-length = 128m
    parsing.max-to-strict-bytes = 128m
    server.websocket.periodic-keep-alive-max-idle = 30 seconds
  }

  ssl-config {
    keyManager = {
      stores = [
        {
          type = "PKCS12"
          path = "/Users/qi/workspace/leonardo/config/leo-client.p12"
          password = "changeit"
        }
      ]
    }
    trustManager = {
      stores = [
        {
          type = "PEM"
          path = "/Users/qi/workspace/leonardo/config/rootCA.pem"
        },
        {
          # Default trust store
          path: ${java.home}/lib/security/cacerts
          password = "changeit"
        }
      ]
    }
  }
}

auth {
  providerConfig {
    # petTokenCacheEnabled is disabled in fiabs and alpha because it doesn't play nicely with gpalloc
    petTokenCacheEnabled = true

    # TODO: remove once https://github.com/DataBiosphere/leonardo/pull/1281 is merged
    samServer = ${sam.server}
    petTokenCacheExpiryTime = 60 minutes
    petTokenCacheMaxSize = 1000
    notebookAuthCacheEnabled = true
    notebookAuthCacheExpiryTime = 30 minutes
    notebookAuthCacheMaxSize = 1000
  }

  # TODO: remove once https://github.com/DataBiosphere/leonardo/pull/1281 is merged
  providerClass = "org.broadinstitute.dsde.workbench.leonardo.auth.sam.SamAuthProvider"
}

# TODO: remove once https://github.com/DataBiosphere/leonardo/pull/1281 is merged
serviceAccounts {
  providerClass = "org.broadinstitute.dsde.workbench.leonardo.auth.sam.PetClusterServiceAccountProvider"

  # alternate provider: uses default compute SA to create cluster, then localizes pet SA on cluster to create notebooks
  # providerClass = "org.broadinstitute.dsde.workbench.leonardo.auth.sam.PetNotebookServiceAccountProvider"

  providerConfig {
    leoServiceAccountEmail = "leonardo-dev@broad-dsde-dev.iam.gserviceaccount.com"
    leoServiceAccountPemFile = "/Users/qi/workspace/leonardo/config/leonardo-account.pem"
    samServer = ${sam.server}
    petTokenCacheExpiryTime = 60 minutes
    petTokenCacheMaxSize = 1000
  }
}

leoExecutionMode {
  backLeo = true
}

