<VirtualHost _default_:${SSL_HTTPD_PORT}>

    SSLEngine on
    SSLProxyEngine on
    SSLCertificateFile "/etc/ssl/certs/server.crt"
    SSLCertificateKeyFile "/etc/ssl/private/server.key"
    SSLCACertificateFile "/etc/ssl/certs/ca-bundle.crt"

    SSLVerifyClient require
    SSLVerifyDepth 10

    ServerName ${PROXY_SERVER_HOST_NAME}
    UseCanonicalName on
    ProxyRequests off

    RewriteEngine on

    ################
    # RStudio
    ################
    RewriteCond %{HTTP:Upgrade} =websocket
    RewriteCond %{REQUEST_URI} /proxy/[^/]*/[^/]*/rstudio/.* [NC]
    RewriteRule /proxy/[^/]*/[^/]*/rstudio/(.*) ws://127.0.0.1:8001/$1  [P,L]

    RewriteCond %{HTTP:Upgrade} !=websocket
    RewriteCond %{REQUEST_URI} /proxy/[^/]*/[^/]*/rstudio/.* [NC]
    RewriteRule /proxy/[^/]*/[^/]*/rstudio/(.*) http://127.0.0.1:8001/$1 [P,L]

    # Include a ProxyPassReverse so redirects by RStudio go to the correct server name (e.g. https://notebooks.firecloud.org)
    # Need to include both http and https, as RStudio redirects to https in some cases.
    ProxyPassReverse /proxy/${GOOGLE_PROJECT}/${RUNTIME_NAME}/rstudio/ http://127.0.0.1:8001/
    ProxyPassReverse /proxy/${GOOGLE_PROJECT}/${RUNTIME_NAME}/rstudio/ https://127.0.0.1:8001/

    # Append SameSite=None to cookies set by RStudio. This is required by some browsers because we
    # render RStudio in an iframe. There does not appear to be a way within RStudio to do this, hence
    # doing it in the proxy.
    Header edit Set-Cookie ^(.*)$ $1;Secure;SameSite=None "expr=%{REQUEST_URI} =~ m#/proxy/[^/]*/[^/]*/rstudio/.*#"

    ####################
    # Welder
    ####################

    RewriteCond %{REQUEST_URI} /proxy/[^/]*/[^/]*/welder/.* [NC]
    RewriteRule /proxy/[^/]*/[^/]*/welder/(.*) http://127.0.0.1:8080/$1 [P,L]

    #####################################
    # Jupyter (legacy /notebooks path)
    #####################################

    RewriteCond %{HTTP:Upgrade} =websocket
    RewriteCond %{REQUEST_URI} /notebooks/[^/]*/[^/]*/.* [NC]
    RewriteRule .*     ws://127.0.0.1:8000%{REQUEST_URI}  [P,L]

    RewriteCond %{HTTP:Upgrade} !=websocket
    RewriteCond %{REQUEST_URI} /notebooks/[^/]*/[^/]*/.* [NC]
    RewriteRule .*     http://127.0.0.1:8000%{REQUEST_URI}  [P,L]

    # Note Jupyter doesn't need ProxyPassReverse because the redirect URL is configured in jupyter_notebook_config.py

    ################################
    # Jupyter (newer /proxy path)
    ################################

    # This needs to be coordinated with a change in jupyter_notebooks_config.py
    # which is why we haven't yet enabled this.

    # RewriteCond %{HTTP:Upgrade} =websocket
    # RewriteCond %{REQUEST_URI} /proxy/[^/]*/[^/]*/jupyter/.* [NC]
    # RewriteRule /proxy/[^/]*/[^/]*/jupyter/(.*) ws://127.0.0.1:8000/$1  [P,L]

    # RewriteCond %{HTTP:Upgrade} !=websocket
    # RewriteCond %{REQUEST_URI} /proxy/[^/]*/[^/]*/jupyter/.* [NC]
    # RewriteRule /proxy/[^/]*/[^/]*/jupyter/(.*) http://127.0.0.1:8000/$1 [P,L]

    # Note Jupyter doesn't need ProxyPassReverse because the redirect URL is configured in jupyter_notebook_config.py

</VirtualHost>
