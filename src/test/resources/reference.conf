// a test DB is required.  Here's an example command to run one locally

//docker run --name mysql-leonardo \
// -e MYSQL_ROOT_PASSWORD=leonardo-test \
// -e MYSQL_USER=leonardo-test \
// -e MYSQL_PASSWORD=leonardo-test \
// -e MYSQL_DATABASE=leotest \
// -d -p 3306:3306 mysql/mysql-server:5.6

mysql {
  profile = "slick.jdbc.MySQLProfile$"
  batchSize = 5000
  host = "localhost"
  host = ${?MYSQL_HOST}
  port = 3306
  port = ${?MYSQL_PORT}
  db {
    driver = "com.mysql.cj.jdbc.Driver"
    url = "jdbc:mysql://"${mysql.host}":"${mysql.port}"/leotestdb?createDatabaseIfNotExist=true&useSSL=false&rewriteBatchedStatements=true&nullNamePatternMatchesAll=true"
    user = "leonardo-test"
    password = "leonardo-test"
    connectionTimeout = "5 seconds"  // default of 1 sec sometimes too short for docker local mysql
  }
}

liquibase {
  changelog = "org/broadinstitute/dsde/workbench/leonardo/liquibase/changelog.xml"
  initWithLiquibase = true
}

dataproc {
  applicationName = "test:leonardo"
  serviceAccount = "test@test.com"
  dataprocDefaultRegion = "testregion"
  dataprocDockerImage = "testrepo/test"
  jupyterProxyDockerImage = "testrepo/test"
  clusterFirewallRuleName = "test-rule"
  clusterFirewallVPCNetwork = "test-network"
  clusterNetworkTag = "test-tag"
  leoGoogleProject = "test-bucket"
  configFolderPath = "src/test/resources/"
  initActionsFileName = "test-init-actions.sh"
  clusterDockerComposeName = "fake-test.yaml"
  leonardoServicePemName = "test.pem"
  jupyterServerCrtName = "test.crt"
  jupyterServerKeyName = "test.key"
  jupyterRootCaPemName = "test.pem"
  jupyterRootCaKeyName = "test.key"
  proxySiteConf = "site.conf"
  proxyAuthOpenIdcConf = "auth_openidc.conf"
  jupyterInstallExtensionScript = "install-jupyter-extension.sh"
  userServiceAccountCredentials = "leo-demo-sa.json"

  clusterUrlBase = "http://leonardo/"

  jupyterServerName = "test-server"
  proxyServerName = "test-proxy-server"
}

akka.ssl-config {
  trustManager = {
    stores = [
      {
        type = "PEM"
        path = "src/test/resources/test-rootCA.pem"
      }
    ]
  }
}
