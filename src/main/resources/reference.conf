
# Google Cloud dataproc configuration
dataproc {
  dataprocDockerImage = "broadinstitute/leonardo-notebooks:prod"
}

# cluster scripts and config
clusterResources {
  initActionsScript = "init-actions.sh"
  clusterDockerCompose = "cluster-docker-compose.yaml"
  proxySiteConf = "cluster-site.conf"
  jupyterCustomJs = "custom.js"
  jupyterGoogleSignInJs = "google_sign_in.js"
}

clusterDefaults {
  numberOfWorkers = 0
  masterMachineType = "n1-standard-4"
  masterDiskSize = 500
  workerMachineType = "n1-standard-4"
  workerDiskSize = 500
  numberOfWorkerLocalSSDs = 0
  numberOfPreemptibleWorkers = 0
}


# Liquibase configuration
liquibase {
  changelog = "org/broadinstitute/dsde/workbench/leonardo/liquibase/changelog.xml"
  initWithLiquibase = true
}

proxy {
  jupyterProxyDockerImage = "broadinstitute/openidc-proxy:2.3.1_2"
  proxyServerName = "jupyter-proxy-server"
  firewallRuleName = "leonardo-notebooks-rule"
  firewallVPCNetwork = "default"
  networkTag = "leonardo"
  jupyterPort = 443
  jupyterProtocol = "tcp"
  dnsPollPeriod = "15s"
  cacheExpiryTime = "60 minutes"
  cacheMaxSize = 100
}

monitor {
  pollPeriod = "1m"
  maxRetries = -1  # means retry forever
  recreateCluster = true
}

akka {
  loglevel = INFO
  http {
    server.idle-timeout = 180 s
    server.request-timeout=60 s
    client.idle-timeout = 1h
  }
}

# Authorization implementation config
auth {
  # The other option is to provide a whitelist of users
  whitelistProviderConfig = {
  }
}

# Configuration for the leo service account and the service account associated with the clusters
serviceAccounts {
  config {
    # Email and private key in pem format for service account that makes requests to Google Dataproc
    #leoServiceAccountEmail = "leonardo-dev@broad-dsde-dev.iam.gserviceaccount.com"
    #leoServiceAccountPemFile = "/etc/leonardo-account.pem"
  }
  # To implement your own service account provisioning, subclass org.broadinstitute.dsde.workbench.leonardo.model.ServiceAccountProvider
  # and specify your concrete class here
  #providerClass = "org.broadinstitute.dsde.workbench.leonardo.auth.PetsPerProjectServiceAccountProvider"
}
